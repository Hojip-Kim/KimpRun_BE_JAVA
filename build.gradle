plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.0'
    id 'io.spring.dependency-management' version '1.1.5'
}

group = 'kimp'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

ext {
    querydslVersion = "5.0.0"
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.java-websocket:Java-WebSocket:1.5.2'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.springframework.security:spring-security-messaging'
    implementation 'org.postgresql:postgresql:42.7.3'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'io.github.bonigarcia:webdrivermanager:5.5.0'
    implementation 'org.jsoup:jsoup:1.18.3'
    implementation 'com.slack.api:slack-api-client:1.43.0'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client:2.6.2'

    // QueryDSL
    implementation "com.querydsl:querydsl-jpa:${querydslVersion}:jakarta"
    annotationProcessor "com.querydsl:querydsl-apt:${querydslVersion}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.postgresql:postgresql'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'com.h2database:h2'
}

def querydslDir = "src/main/generated"

sourceSets {
    main {
        java {
            srcDirs += querydslDir
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.generatedSourceOutputDirectory = file(querydslDir)
    options.encoding = "UTF-8"
    options.compilerArgs += ["-Xlint:deprecation", "-Xlint:unchecked"]
}

tasks.named('test') {
    useJUnitPlatform()
    systemProperty 'file.encoding', 'UTF-8'
}
