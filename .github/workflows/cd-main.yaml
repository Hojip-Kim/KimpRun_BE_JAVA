#  개발 서버에 배포
name: CD-main

on:
  workflow_run:
    workflows:
      - 'CI-main'
    types:
      - completed
    branches:
      - 'main'

jobs:
  build-and-push:
    # CI 워크플로우 성공했을 시 실행
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      # 커밋 아이디 읽기
      - name: Download commit ID artifact
        uses: dawidd6/action-download-artifact@v3
        with:
          workflow: ci-main
          run_id: ${{ github.event.workflow_run.id }}
          name: commit-id
          path: .

      - name: Read commit ID
        id: read-commit-id
        run: |
          COMMIT_ID=$(cat commit-id.txt)
          echo "COMMIT_ID=${COMMIT_ID}" >> $GITHUB_ENV
          echo "Commit ID : ${COMMIT_ID}"

      - name: Checkout Source code
        uses: actions/checkout@v4
        with:
          path: ./kimprun_be

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        run: |
          cd ./kimprun_be
          docker build --platform linux/amd64 -t hojipkim/kimprun_be:${{ env.COMMIT_ID }} .
          docker push hojipkim/kimprun_be:${{ env.COMMIT_ID }}
          echo "✅ Docker image pushed: hojipkim/kimprun_be:${{ env.COMMIT_ID }}"
    outputs:
      commit-id: ${{ env.COMMIT_ID }}

  chart-update:
    needs: build-and-push
    runs-on: self-hosted
    steps:
      - name: Read commit ID from previous job
        run: |
          echo "COMMIT_ID=${{ needs.build-and-push.outputs.commit-id }}" >> $GITHUB_ENV
          echo "Commit ID : ${needs.build-and-push.outputs.commit-id}"

      - name: Checkout charts repository
        uses: actions/checkout@v4
        with:
          repository: Hojip-Kim/Kimprun_HelmCharts
          ref: main
          token: ${{ secrets.CHARTS_REPO_PAT }}

      - name: Update backend image tag in values.yaml
        shell: bash
        run: |
          echo "커밋 아이디 : $COMMIT_ID"
          yq -i '.backend.image.tag = "'${COMMIT_ID}'"' values.yaml
          cat values.yaml | grep -A 3 "backend:"

      - name: Commit and push changes to charts repository
        run: |
          git add values.yaml
          git commit -m "🚀 Update backend image tag to $COMMIT_ID"
          git push origin main

      - name: Deploy with ArgoCD CLI
        run: |
          echo "🚀 Starting ArgoCD deployment..."
          
          kubectl port-forward svc/argocd-server -n argocd 8080:443 &
          PORT_FORWARD_PID=$!
          
          echo "⏳ Preparing ArgoCD connection..."
          sleep 15
          
          argocd login localhost:8080 \
            --username ${{ secrets.ARGOCD_USERNAME }} \
            --password ${{ secrets.ARGOCD_PASSWORD }} \
            --insecure
          
          echo "✅ ArgoCD login successful!"
          
          argocd app refresh kimprun-app --insecure
          
          echo "🔄 Syncing application..."
          argocd app sync kimprun-app --insecure
          
          echo "⏳ Waiting for deployment completion..."
          argocd app wait kimprun-app --health --timeout 300 --insecure
          
          echo "📊 Final application status:"
          argocd app get kimprun-app --insecure
          
          kill $PORT_FORWARD_PID || true
          
          echo "✅ Deployment completed successfully!"

      - name: Deployment summary
        run: |
          echo "🎉 ===== DEPLOYMENT SUMMARY ====="
          echo "📦 Image: hojipkim/kimprun_be:${{ env.COMMIT_ID }}"
          echo "🔄 Commit: ${{ github.sha }}"
          echo "🌐 Environment: Development"
          echo "⏰ Deployed at: $(date)"
          echo "🔗 ArgoCD: https://argocd.kimprun.com"
          echo "================================"

      - name: Clean up workspace
        if: always()
        run: |
          rm -rf $GITHUB_WORKSPACE/*